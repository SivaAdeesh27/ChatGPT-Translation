# -*- coding: utf-8 -*-
"""OpenaiTranslation(WN).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YoWhoguxO3D5okmXMLud0PdiXYPjZtuu
"""

!pip install openai

import openai
import time
import csv

openai.api_key = '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'

def translate_batch(sentence_batch):
    prompt_text = "Translate the following English sentences into Mauritian Creole:\n\n"

    for i, sentence in enumerate(sentence_batch):
        prompt_text += f"{i+1}. {sentence}\n"

    prompt_text += "\nProvide the Mauritian Creole translations with their index numbers:\n"

    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=prompt_text,
        max_tokens=1000,
        n=1,
        temperature=0.3,
    )

    translations = response.choices[0].text.strip().split("\n")
    return [t.split('. ', 1)[-1].strip() for t in translations]

input_file = 'WorldNewsData.csv'
output_file = 'WorldNewsPC.csv'

start_line = 0
batch_size = 50

with open(input_file, 'r', encoding='utf-8') as infile, open(output_file, 'w', encoding='utf-8', newline='') as outfile:
    csv_reader = csv.reader(infile)
    csv_writer = csv.writer(outfile)


    csv_writer.writerow(['English Sentence', 'Mauritian Creole Sentence'])


    for _ in range((start_line - 1)):
        next(csv_reader)

    sentence_batch = []
    for i, row in enumerate(csv_reader):
        if i == 50000:
            break

        english_sentence = row[0]
        sentence_batch.append(english_sentence)

        if len(sentence_batch) == batch_size:
            translations = translate_batch(sentence_batch)

            if len(sentence_batch) == len(translations):
                for english, creole in zip(sentence_batch, translations):
                    csv_writer.writerow([english, creole])
            else:
                for english, creole in zip(sentence_batch, translations):
                    csv_writer.writerow([english, creole])

            outfile.flush()
            sentence_batch = []


    if sentence_batch:
        translations = translate_batch(sentence_batch)

        if len(sentence_batch) == len(translations):
            for english, creole in zip(sentence_batch, translations):
                csv_writer.writerow([english, creole])
        else:

            for english, creole in zip(sentence_batch, translations):
                csv_writer.writerow([english, creole])